#!/bin/bash

main() {
    focus=1
    files=()

    while [ $# -gt 0 ];
    do
        case $1
        in
            -d) focus=0
                ;;
            -h) _help;
                exit;
                ;;
            *)
                if [ -f "$1" ]; then
                    files+=("$1")
                else
                    _error "Inexisting file $1"
                fi
                ;;
        esac
        shift
    done

    # if not in tmux, open first file in vim
    if [ -z "$TMUX" ]; then
        if [ -n "${files[1]}" ]; then
            _debug 'Not in tmux'
            exec vim "$1"
        fi
    else
        target_id=$(ensure_tmux_target)
    fi

    for f in "${files[@]}"; do
        open_in_vim "$f" "$target_id"
    done

    if [ "$focus" -eq 1 ]; then
        tmux select-pane -t "$target_id"
        tmux select-window -t "$target_id"
    fi
    # tmux move-window -r
}

ensure_tmux_target() {
    # Identificare target_id ca "fereastra care conține vim"
    target_id=$(tmux list-panes -s -F "#{pane_id} #{pane_current_command}" | awk '$2 == "vim" { print $1 }')

    # Dacă nu există, deschid fereastră nouă și trimit keys să deschidă vim
    if [ -z "$target_id" ]; then
        target_id=$(tmux new-window -d -b -t 1 -P -F "#{pane_id}" bash)
        tmux send-keys -t "$target_id" vim C-m
        sleep 0.3
    fi

    echo "$target_id"
}

open_in_vim() {
    filepath="$1"
    target_id="$2"

    _debug "filepath original = $filepath"

    filepath=$(readlink -e "$filepath")
    # trimit tastele care imi deschide in vim fisierul catre editare
    # filepath=ul trebuie esacpe-uit ca path corect
    # de asemenea in command line-ul vim se escape-uiesc caracterele %, #,
    # TODO: de vazut ce alte caractere mai trebuie escape-uite
    filepath=$(printf "%q" "$filepath" | sed -r -e 's/%/\\%/g' -e 's/#/\\#/g' )

    _debug "filepath normalized = $filepath"
    tmux send-keys -t "$target_id" Escape ":" C-u "edit $filepath" C-m
}

_debug() {
    [ "$TVIM_DEBUG" == "1" ] && echo "$1" >&2
}

_error() {
    echo "$1" >&2
}

_help()
{
    cat << HELP
tvim [-d] filepath [filepath] ...

-d Do not focus on vim window in TMUX
HELP
}

main "$@"
