*exrc.txt*					A secure exrc reimplementation

==============================================================================
INTRODUCTION					*exrc-introduction*

*exrc.vim* is a secure reimplementation of 'exrc' feature.

Enables the reading of local config files in the current working directory.

The advantage over the native 'exrc' feature is that each file has to be
manually marked as trusted, before it can be sourced. exrc.vim keeps track
of file hashes and every time the content or location of a config file
changes, it has to be marked as trusted again.

When exrc.vim detects a new config file, it will ask what do you want to do
with it:
>
	exrc.vim: Unknown config found: /path/to/.exrc
	[i]gnore, (e)dit, (b)lacklist, (t)rust:
<
<Esc>, <CR>, i -> ignore question for now and continue
             e -> edit (show) this file
             b -> blacklist, don't ask me about this file again
             t -> trust and source this file

------------------------------------------------------------------------------
COMMAND						*exrc-command*

:ExrcTrust[!] {file}				*:ExrcTrust*
	Add {file} to trusted files.
	If {file} is not specified, the current buffer is selected.
	With ! blacklisted files can be trusted again.

	To automatically mark saved files as trusted, use this autocmd:
>
		autocmd BufWritePost .exrc nested silent ExrcTrust
<
:ExrcEdit					*:ExrcEdit*
	Edit local config file.

:ExrcSource					*:ExrcSource*
	Source local config file.
	Accepted command modifiers: |:silent|, |:confirm|

------------------------------------------------------------------------------
OPTIONS						*exrc-options*

g:exrc#names					*g:exrc#names*
	List of accepted filenames.

	If the list includes filenames that are used by the native 'exrc'
	option (".vimrc", ".exrc" or ".gvimrc"), the 'exrc' option has to be
	turned off.
>
		set noexrc
<
	To enable lua support, add a filename with ".lua" extension:
>
		let g:exrc#names = ['.exrc', '.exrc.lua']
<
	Default: [".exrc", ".exrc.local", ".vimrc.local"]

g:exrc#hash_func				*g:exrc#hash_func*
	Hashing function.

	The default function uses builtin |sha256()| function. If vim is
	compiled without |+cryptv| option, a custom function can be provided.
	Function should take a filename as an argument and return a |String|.
	Returned value is stripped from whitespace and only first |WORD| is
	used as a hash.
>
		fun! HashFile(fname)
			return system('sha512sum '.shellescape(a:fname))
		endfun
		let g:exrc#hash_func = 'HashFile'
<
g:exrc#cache_file				*g:exrc#cache_file*
	Path to the cache file with trusted hashes.

	Default: "$HOME/.exrc_cache" or "|stdpath('cache')|/.exrc_cache"

vim:tw=78:sw=8:sts=8:ts=8:noet:ft=help:norl:
